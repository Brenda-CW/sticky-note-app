{"ast":null,"code":"var _jsxFileName = \"/Users/brenda/Documents/l14-sticky-notes-app/src/Note.js\";\nimport React from \"react\";\nexport default function Note(props) {\n  //console.log(props);\n  var titleUpdate = function titleUpdate(e) {\n    var valueOfEdited = e.target.value; //what user typed is the new value\n\n    var idOfEdited = props.note.id; //grab the id of the note being edited\n\n    props.onType(idOfEdited, \"title\", valueOfEdited); //call onType method and pass it these properties\n  };\n\n  var descriptionUpdate = function descriptionUpdate(e) {\n    var valueOfEdited = e.target.value; //what user typed is the new value\n\n    var idOfEdited = props.note.id; //grab the id of the note being edited\n\n    props.onType(idOfEdited, \"description\", valueOfEdited); //call onType method and pass it these properties\n  };\n\n  var clickDelete = function clickDelete() {\n    return props.removeNote(props.note.id);\n  }; // console.log(props);\n  // console.log(props.note.id);\n\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"note__title\",\n    type: \"text\",\n    placeholder: \"Title\",\n    value: props.note.title,\n    onChange: titleUpdate //call the function to update the title\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note__description\",\n    placeholder: \"Description...\",\n    value: props.note.description,\n    onChange: descriptionUpdate //call the function to update the description.\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"note__delete\",\n    onClick: clickDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"X\"));\n}\n/*NotesList is sending entire note object via props; \nvalue can grab object property for title and description;\nneed props.note so it plugs in value for each note in the array*/\n\n/*onChange events call functions that will grab the value that was typed into the field and feed that, \nplus other data back to the onType method */","map":{"version":3,"sources":["/Users/brenda/Documents/l14-sticky-notes-app/src/Note.js"],"names":["React","Note","props","titleUpdate","e","valueOfEdited","target","value","idOfEdited","note","id","onType","descriptionUpdate","clickDelete","removeNote","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzB,QAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA/B,CADyB,CACa;;AACtC,QAAMC,UAAU,GAAGN,KAAK,CAACO,IAAN,CAAWC,EAA9B,CAFyB,CAES;;AAClCR,IAAAA,KAAK,CAACS,MAAN,CAAaH,UAAb,EAAyB,OAAzB,EAAkCH,aAAlC,EAHyB,CAGyB;AACnD,GAJD;;AAMA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,CAAD,EAAO;AAC/B,QAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA/B,CAD+B,CACO;;AACtC,QAAMC,UAAU,GAAGN,KAAK,CAACO,IAAN,CAAWC,EAA9B,CAF+B,CAEG;;AAClCR,IAAAA,KAAK,CAACS,MAAN,CAAaH,UAAb,EAAyB,aAAzB,EAAwCH,aAAxC,EAH+B,CAGyB;AACzD,GAJD;;AAMA,MAAMQ,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMX,KAAK,CAACY,UAAN,CAAiBZ,KAAK,CAACO,IAAN,CAAWC,EAA5B,CAAN;AAAA,GAApB,CAdkC,CAelC;AACA;;;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAER,KAAK,CAACO,IAAN,CAAWM,KAJpB;AAKE,IAAA,QAAQ,EAAEZ,WALZ,CAKyB;AALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,KAAK,EAAED,KAAK,CAACO,IAAN,CAAWO,WAHpB;AAIE,IAAA,QAAQ,EAAEJ,iBAJZ,CAI+B;AAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAcE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,OAAO,EAAEC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdF,CADF;AAoBD;AAED;AACA;AACA;;AAEA;AACA","sourcesContent":["import React from \"react\";\n\nexport default function Note(props) {\n  //console.log(props);\n  const titleUpdate = (e) => {\n    const valueOfEdited = e.target.value; //what user typed is the new value\n    const idOfEdited = props.note.id; //grab the id of the note being edited\n    props.onType(idOfEdited, \"title\", valueOfEdited); //call onType method and pass it these properties\n  };\n\n  const descriptionUpdate = (e) => {\n    const valueOfEdited = e.target.value; //what user typed is the new value\n    const idOfEdited = props.note.id; //grab the id of the note being edited\n    props.onType(idOfEdited, \"description\", valueOfEdited); //call onType method and pass it these properties\n  };\n\n  const clickDelete = () => props.removeNote(props.note.id);\n  // console.log(props);\n  // console.log(props.note.id);\n\n  return (\n    <li className=\"note\">\n      <input\n        className=\"note__title\"\n        type=\"text\"\n        placeholder=\"Title\"\n        value={props.note.title}\n        onChange={titleUpdate} //call the function to update the title\n      />\n      <textarea\n        className=\"note__description\"\n        placeholder=\"Description...\"\n        value={props.note.description}\n        onChange={descriptionUpdate} //call the function to update the description.\n      />\n      <span className=\"note__delete\" onClick={clickDelete}>\n        X\n      </span>\n    </li>\n  );\n}\n\n/*NotesList is sending entire note object via props; \nvalue can grab object property for title and description;\nneed props.note so it plugs in value for each note in the array*/\n\n/*onChange events call functions that will grab the value that was typed into the field and feed that, \nplus other data back to the onType method */\n"]},"metadata":{},"sourceType":"module"}